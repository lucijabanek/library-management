services:
  postgres_db:
    image: postgres:latest
    restart: always
    env_file: ./.env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:${DB_PORT}
    volumes: 
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build: .
    image: library_management_api
    env_file: ./.env
    ports:
      - 3000:${PORT}
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - SECRET_KEY=${SECRET_KEY}
      - EXPIRES_IN=${EXPIRES_IN}
      - NOTIFICATION_MAILER_HOST=maildev
      - NOTIFICATION_MAILER_PORT=1025
      - CRON_SCHEDULE=${CRON_SCHEDULE}
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - GOOGLE_BOOKS_API_URL=${GOOGLE_BOOKS_API_URL}
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy
      maildev:
        condition: service_started
  maildev:
    image: maildev/maildev:latest
    restart: always
    ports:
      - 1080:1080

volumes:
  postgres_db: {}